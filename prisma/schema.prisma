// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  username    String    @unique
  email       String    @unique
  name        String    @default("")
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  role        Role      @default(STUDENT)
  studentId   String    @unique
  dateofbirth DateTime
  phonenumber String
  Job         Job[]
  Criteria    Criteria?
}

model Criteria {
  id                          String @id @default(auto()) @map("_id") @db.ObjectId
  cpi                         Float  @default(0)
  english_level               Int    @default(0)
  logical_reasoning_level     Int    @default(0)
  experience_gained           Int    @default(0)
  extra_curricular_activities Int    @default(0)
  easy_leetcode_questions     Int    @default(0)
  medium_leetcode_questions   Int    @default(0)
  hard_leetcode_questions     Int    @default(0)
  Angular                     Int    @default(0)
  CPP                         Int    @default(0)
  Django                      Int    @default(0)
  ExpressJS                   Int    @default(0)
  Flask                       Int    @default(0)
  Java                        Int    @default(0)
  JavaScript                  Int    @default(0)
  Laravel                     Int    @default(0)
  NodeJS                      Int    @default(0)
  PHP                         Int    @default(0)
  Python                      Int    @default(0)
  React                       Int    @default(0)
  SpringBoot                  Int    @default(0)
  VueJS                       Int    @default(0)
  user                        User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                      String @unique @db.ObjectId
  Job                         Job?
}

model Job {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  company     String
  companyUrl  String
  role        String
  location    String
  salary      String
  skills      String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  recruiter   User      @relation(fields: [recruiterId], references: [id])
  recruiterId String    @db.ObjectId
  Criteria    Criteria? @relation(fields: [criteriaId], references: [id])
  criteriaId  String?   @unique @db.ObjectId
}

enum Role {
  STUDENT
  RECRUITER
  ADMIN
}
